version: "3.3"

services:
  backend:
    container_name: underleaf-backend
    depends_on:
      - dind
      - db
      - nginx-git
      - permission-fixer
    build:
      context: ./backend
      dockerfile: Dockerfile # use the Dev.Dockerfile for development
    volumes:
      #- ./backend:/app # allows reloading of code
      - ./data/:/app/data/
      - docker-cert:/cert
    environment:
      - DOCKER_CERT_PATH=/cert/client
      - DEBUG=yes
    restart: "unless-stopped"

  db:
    image: mongo@sha256:3745209b24062a8ba670878bce47ad9c944682f550044721c4abc5b4daeb863d
    logging:
      driver: none
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    restart: "unless-stopped"
    command: --auth

  dind:
    image: docker:dind@sha256:a7a9383d0631b5f6b59f0a8138912d20b63c9320127e3fb065cb9ca0257a58b2
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    logging:
      driver: none
    restart: "unless-stopped"
    tmpfs:
      - /var/run/
    volumes:
      - docker-cert:/certs
      - ./data/docker:/var/lib/docker

  nginx-git:
    image: catks/gitserver-http@sha256:5008e89559513aa77477c6a7c25b66818ea8396a3cb3c4503b63e3ac721e1d7f
    user: 1000:1000
    depends_on:
      - permission-fixer
    logging:
      driver: none
    volumes:
      - ./data/git:/home/git
    restart: "unless-stopped"

  frontend:
    build: ./frontend
    logging:
      driver: none
    restart: "unless-stopped"

  reverseproxy:
    depends_on:
      - backend
      - frontend
    image: nginx:alpine@sha256:a74534e76ee1121d418fa7394ca930eb67440deda413848bc67c68138535b989
    volumes:
      - ./reverseproxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 4242:4242
    logging:
      driver: none
    restart: "unless-stopped"

  permission-fixer:
    image: alpine@sha256:686d8c9dfa6f3ccfc8230bc3178d23f84eeaf7e457f36f271ab1acc53015037c
    command:
      [
        "/bin/sh",
        "-c",
        "mkdir -p /data/git/; mkdir -p /data/projects/; chown -R 1000:1000 /data /cert",
      ]
    volumes:
      - ./data/:/data
      - docker-cert:/cert

  cleaner:
    image: alpine@sha256:686d8c9dfa6f3ccfc8230bc3178d23f84eeaf7e457f36f271ab1acc53015037c
    command:
      [
        "/bin/sh",
        "-c",
        "while true; do find /data/git/* /data/projects/* /data/compile/* -maxdepth 1 -type d -mmin +20 -exec rm -rv {} +; echo 'Cleaned old projects'; sleep 1200; done",
      ]
    volumes:
      - ./data/:/data

volumes:
  docker-cert:
